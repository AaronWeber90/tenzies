{"version":3,"sources":["Die.js","Scoreboard.js","Controls.js","Sidebar.js","Header.js","App.js","index.js"],"names":["Die","props","styles","backgroundColor","isHeld","transform","boxShadow","className","value","style","onClick","holdDice","Scoreboard","scoreBoardEl","scoreData","map","item","id","Date","date","toLocaleString","rolls","time","SortButton","click","class","icon","length","sortDay","sorting","sortRolls","sortTime","deleteScore","Controls","handlePause","isPaused","handleStop","Sidebar","isActive","Header","winnerCongrats","rndNum","Math","floor","random","headerContent","subHeaderContent","tenzies","React","memo","App","useState","allNewDice","dice","setDice","setTenzies","setRolls","JSON","parse","localStorage","getItem","setScoreData","setsorting","setIsActive","setIsPaused","setTime","timerStart","timerReset","newDice","i","push","createNewDie","ceil","nanoid","useEffect","allHeld","every","sameValue","prevState","toString","setItem","stringify","interval","setInterval","clearInterval","diceElements","die","sort","a","b","sortData","console","log","removeItem","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7a4e2f86.chunk.js","sourcesContent":["import React from \"react\"\r\n\r\nexport default function Die(props) {\r\n\r\n        const styles = {\r\n        backgroundColor: props.isHeld && \"#3bacee\",\r\n        transform: props.isHeld && \"translateY(-4px) scale(1.05)\",\r\n        boxShadow: props.isHeld && \"0px 8px 8px 0px #00000026\"\r\n        }\r\n\r\n    return (\r\n        <div className={`die die-${props.value}`} style={styles} onClick={props.holdDice}>\r\n            <div className=\"die-dot die-dot-1\"></div>\r\n            <div className=\"die-dot die-dot-2\"></div>\r\n            <div className=\"die-dot die-dot-3\"></div>\r\n            <div className=\"die-dot die-dot-4\"></div>\r\n            <div className=\"die-dot die-dot-5\"></div>\r\n            <div className=\"die-dot die-dot-6\"></div>\r\n            <div className=\"die-dot die-dot-7\"></div>\r\n            <div className=\"die-dot die-dot-8\"></div>\r\n            <div className=\"die-dot die-dot-9\"></div>\r\n        </div>\r\n    )\r\n}","import React from \"react\";\r\n\r\nexport default function Scoreboard(props) {\r\n  const scoreBoardEl = props.scoreData.map((item, id) => (\r\n    <tr className=\"scorebard__row\" key={id}>\r\n      <td className=\"scoreboard-date\">\r\n        {new Date(item.date).toLocaleString()}\r\n      </td>\r\n      <td>\r\n        <strong>Rolls:</strong> {item.rolls}\r\n      </td>\r\n      <td>\r\n        <strong>Time:</strong> {item.time}\r\n      </td>\r\n    </tr>\r\n  ));\r\n\r\n  function SortButton(props) {\r\n    return (\r\n      <button\r\n        onClick={props.click}\r\n        className={props.class ? \"active-filter\" : \"\"}\r\n      >\r\n        {props.icon}\r\n      </button>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <h2>Scoreboard</h2>\r\n      {props.scoreData.length > 0 ? (\r\n        <>\r\n          <table className=\"scoreboard\">\r\n            <thead>\r\n              <tr>\r\n                <th>\r\n                  <SortButton\r\n                    click={props.sortDay}\r\n                    class={props.sorting.date}\r\n                    icon={\"📅\"}\r\n                  />\r\n                </th>\r\n                <th>\r\n                  <SortButton\r\n                    click={props.sortRolls}\r\n                    class={props.sorting.rolls}\r\n                    icon={\"🎲\"}\r\n                  />\r\n                </th>\r\n                <th>\r\n                  <SortButton\r\n                    click={props.sortTime}\r\n                    class={props.sorting.time}\r\n                    icon={\"⏱️\"}\r\n                  />\r\n                </th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>{scoreBoardEl}</tbody>\r\n          </table>\r\n          <button className=\"btn control-btn\" onClick={props.deleteScore}>\r\n            Delete Scores\r\n          </button>\r\n        </>\r\n      ) : (\r\n        <p>No scores</p>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n","import React from \"react\"\r\n\r\nexport default function Controls(props) {\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"controls\">Controls</h2>\r\n            <button className=\"btn control-btn\" onClick={props.handlePause}>{props.isPaused ? \"Resume\" : \"Pause\"}</button>\r\n            <button className=\"btn control-btn\" onClick={props.handleStop}>End Game</button>\r\n        </>\r\n    )\r\n}","import React from \"react\"\r\nimport Scoreboard from \"./Scoreboard\"\r\nimport Controls  from \"./Controls\"\r\n\r\nexport default function Sidebar(props) {\r\n\r\n    return (\r\n        <aside className={`sidebar ${props.isActive ? \"sidebar-controle\" : \"sidebar-scoreboard\"}`}>\r\n            {props.isActive ? \r\n            <Controls \r\n                handlePause={props.handlePause}\r\n                handleStop={props.handleStop} \r\n                isPaused={props.isPaused}\r\n            /> :\r\n            <Scoreboard \r\n                scoreData={props.scoreData}\r\n                sortRolls={props.sortRolls}\r\n                sortTime={props.sortTime}\r\n                sortDay={props.sortDay}\r\n                sorting={props.sorting}\r\n                deleteScore={props.deleteScore}\r\n            />}\r\n        </aside>\r\n    )\r\n}\r\n\r\n//https://www.geeksforgeeks.org/create-a-stop-watch-using-reactjs/","import React from \"react\"\r\n\r\nfunction Header(props) {\r\n    const winnerCongrats = [\r\n        \"🎉 You did it!\",\r\n        \"🎊 Nice Job!\",\r\n        \"✨ Good Game!\"\r\n    ]\r\n    const rndNum =  Math.floor(Math.random() * winnerCongrats.length)\r\n    let headerContent = \"\"\r\n    let subHeaderContent = \"\"\r\n    \r\n    if(!props.isActive && !props.tenzies) {\r\n        headerContent = \"Tenzies\"\r\n    } else if(props.isActive) {\r\n        headerContent = `Time: ${props.time} - Rolls: ${props.rolls}`\r\n    } else {\r\n        headerContent = winnerCongrats[rndNum]\r\n    }\r\n    \r\n    if (!props.tenzies) {\r\n        subHeaderContent = \"Roll until all dice are the same. Click each die to freeze it at its current value between rolls.\"\r\n    } else {\r\n        subHeaderContent = \"If you enjoyed my version of Tenzies, I would like to hear your feedback!\"\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h1 className=\"title\"> \r\n                {headerContent}\r\n            </h1>\r\n            <p className=\"description\">\r\n                {subHeaderContent}\r\n            </p>\r\n        </>\r\n    )\r\n}\r\nexport default React.memo(Header)","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport Die from \"./Die\";\nimport { nanoid } from \"nanoid\";\nimport Confetti from \"react-confetti\";\nimport Sidebar from \"./Sidebar\";\nimport Header from \"./Header\";\n\nfunction App() {\n  const [dice, setDice] = useState(allNewDice());\n  const [tenzies, setTenzies] = useState(false);\n\n  const [rolls, setRolls] = useState(-1);\n  const [scoreData, setScoreData] = useState(\n    JSON.parse(localStorage.getItem(\"scoreData\")) || []\n  );\n\n  const [sorting, setsorting] = useState({\n    date: false,\n    time: false,\n    rolls: false,\n  });\n  // const [today, setToday] = useState(\"\");\n\n  const [isActive, setIsActive] = useState(false);\n  const [isPaused, setIsPaused] = useState(true);\n  const [time, setTime] = useState(0);\n\n  // CHECK FOR TENZIES AND END GAME\n  useEffect(() => {\n    const allHeld = dice.every((item) => item.isHeld);\n    const sameValue = dice.every((item) => item.value === dice[0].value);\n\n    if (allHeld && sameValue) {\n      setTenzies(true);\n      setScoreData((prevState) => {\n        return [\n          ...prevState,\n          {\n            rolls: rolls + 1,\n            time: time,\n            date: new Date().toString(),\n          },\n        ];\n      });\n\n      timerReset();\n    }\n  }, [dice]);\n\n  // SET LOCALE STORAGE IF SCORE CHANGES\n  useEffect(() => {\n    localStorage.setItem(\"scoreData\", JSON.stringify(scoreData));\n  }, [scoreData]);\n\n  // TIMER\n  useEffect(() => {\n    let interval = null;\n\n    if (isActive && !isPaused) {\n      interval = setInterval(() => {\n        setTime((prevState) => prevState + 1);\n      }, 1000);\n    } else {\n      clearInterval(interval);\n    }\n\n    return () => {\n      clearInterval(interval);\n    };\n  }, [isActive, isPaused]);\n\n  function timerStart() {\n    setIsActive(true);\n    setIsPaused(false);\n  }\n\n  function timerPauseResume() {\n    setIsPaused(!isPaused);\n  }\n\n  function timerReset() {\n    setIsActive(false);\n    setTime(0);\n  }\n\n  // CREATE 10 NEW DICE\n  function allNewDice() {\n    let newDice = [];\n    for (let i = 0; i < 10; i++) {\n      newDice.push(createNewDie());\n    }\n    return newDice;\n  }\n\n  function createNewDie() {\n    return {\n      value: Math.ceil(Math.random() * 6),\n      isHeld: false,\n      id: nanoid(),\n    };\n  }\n\n  function rollDice() {\n    if (tenzies) {\n      setDice(allNewDice());\n      setTenzies(false);\n      setRolls(0);\n      timerStart();\n    } else {\n      setDice((prevState) =>\n        prevState.map((die) => {\n          return die.isHeld ? die : createNewDie();\n        })\n      );\n      setRolls((prevState) => prevState + 1);\n      timerStart();\n    }\n  }\n\n  function holdDice(id) {\n    if (!tenzies && isActive && !isPaused) {\n      setDice((prevState) =>\n        prevState.map((die) => {\n          return die.id === id ? { ...die, isHeld: !die.isHeld } : die;\n        })\n      );\n    }\n  }\n\n  const diceElements = dice.map((die) => {\n    return (\n      <Die\n        key={die.id}\n        value={die.value}\n        isHeld={die.isHeld}\n        holdDice={() => holdDice(die.id)}\n      />\n    );\n  });\n\n  function ButtonContent() {\n    if (tenzies || !isActive) {\n      return \"New Game\";\n    } else {\n      return \"Roll\";\n    }\n  }\n\n  // SORTING LOGIC\n  function sortTime() {\n    setScoreData((prevState) => {\n      const sortData = prevState.sort((a, b) => a.time - b.time);\n      return sortData;\n    });\n    setsorting({\n      date: false,\n      time: true,\n      rolls: false,\n    });\n  }\n\n  function sortDay() {\n    setScoreData((prevState) => {\n      const sortData = prevState.sort((a, b) => {\n        console.log(a.date);\n        console.log(typeof a.date);\n        // return a.date - b.date;\n        return new Date(a.date) - new Date(b.date);\n      });\n      console.log(sortData);\n      return sortData;\n    });\n    setsorting({\n      date: true,\n      time: false,\n      rolls: false,\n    });\n  }\n\n  function sortRolls() {\n    setScoreData((prevState) => {\n      const sortData = prevState.sort((a, b) => a.rolls - b.rolls);\n      return sortData;\n    });\n    setsorting({\n      date: false,\n      time: false,\n      rolls: true,\n    });\n  }\n\n  function deleteScore() {\n    setScoreData([]);\n    setsorting({\n      date: false,\n      time: false,\n      rolls: false,\n    });\n    localStorage.removeItem(\"scoreData\");\n  }\n\n  return (\n    <>\n      <main class=\"main\">\n        <section className=\"playground\">\n          <Header\n            time={time}\n            rolls={rolls}\n            isActive={isActive}\n            tenzies={tenzies}\n          />\n          <section className=\"dice-grid\">{diceElements}</section>\n          <button className=\"btn roll-dice-btn\" onClick={rollDice}>\n            {ButtonContent()}\n          </button>\n        </section>\n        <Sidebar\n          rolls={rolls}\n          scoreData={scoreData}\n          tenzies={tenzies}\n          isActive={isActive}\n          isPaused={isPaused}\n          handlePause={() => timerPauseResume()}\n          handleStop={() => timerReset()}\n          sortTime={() => sortTime()}\n          sortDay={() => sortDay()}\n          sortRolls={() => sortRolls()}\n          sorting={sorting}\n          deleteScore={() => deleteScore()}\n        />\n        {tenzies && <Confetti />}\n      </main>\n    </>\n  );\n}\n\nexport default App;\n\n// save best time & lowest rolls\n// improve confetti width\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}